<div class="container-fluid py-2">
    <div class="row">
        <div class="col-12">
            <div class="card my-4">
                <div
                    class="card-header p-0 position-relative mt-n4 mx-3 z-index-2">
                    <div
                        class="bg-gradient-dark shadow-dark border-radius-lg pt-4 pb-3">
                        <h6 class="text-white text-capitalize ps-1 m-2">بررسی
                            ورود و خروج ها</h6>
                    </div>
                </div>
                <div class="card-body px-0 pb-2">
                    <form class="form row container-fluid" id="logerForm">
                        <h6>جستجو</h6>

                        <div
                            class="col input-group input-group-outline my-3 position-relative">
                            <label
                                class="form-label text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">
                                نام کاربر را وارد کنید
                            </label>
                            <input type="text" id="logUsername"
                                class="form-control" placeholder required
                                autocomplete="off"
                                autocorrect="off"
                                spellcheck="false"
                                autocapitalize="none">

                            <!-- لیست کاربران ستاره دار -->
                            <ul id="starredUsersList"
                                class="dropdown-menu w-100 shadow"
                                style="display: none; position: absolute; top: 100%; left: 0; z-index: 1000;">
                            </ul>
                        </div>
                        <div class="col input-group input-group-outline my-3">
                            <label
                                class="form-label text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">
                                سال را وارد کنید
                            </label>
                            <input type="number" id="logYear"
                                class="form-control" placeholder>
                        </div>
                        <div class="col input-group input-group-outline my-3">
                            <label
                                class="form-label text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">
                                ماه را وارد کنید
                            </label>
                            <input type="number" id="logMonth"
                                class="form-control" placeholder min="1"
                                max="12">
                        </div>
                        <div class="col input-group input-group-outline my-3">
                            <label
                                class="form-label text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">
                                روز را وارد کنید
                            </label>
                            <input type="number" id="logDay"
                                class="form-control" placeholder min="1"
                                max="31">
                        </div>

                        <div class="col input-group input-group-outline my-3">
                            <input type="submit" value="جستجو"
                                class="btn bg-gradient-dark w-100 mb-2">
                        </div>
                    </form>
                    <div class="table-responsive p-0">
                        <!-- <table class="table align-items-center mb-0"
                            id="table-loger">
                            <thead>
                                <tr id="table-loger-tr">

                                </thead>
                                <tbody id="table-loger-tbody">
                                </tbody>
                            </table>
                            <div class="container-fluid p-2"
                                style="text-align: center;"
                                id="table-loger-pagination"></div> -->
                        <canvas id="logChart"></canvas>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <footer class="footer py-4  ">
        <div class="container-fluid">
            <div
                class="row align-items-center justify-content-lg-between">
                <div class="col-lg-6 mb-lg-0 mb-4">
                    <div
                        class="copyright text-center text-sm text-muted text-lg-end">
                        © <script>
                  document.write(new Date().getFullYear())
                </script>,
                        <!-- ساخته شده <i class="fa fa-heart"></i> توسط
                        <a href="https://www.github.com/amili-code"
                            class="font-weight-bold"
                            target="_blank">amili-code</a>
                        برای مدیریت اسان تر -->
                    </div>
                </div>
                <div class="col-lg-6">
                    <ul
                        class="nav nav-footer justify-content-center justify-content-lg-end">
                        <li class="nav-item">
                            <a href="/about-us"
                                class="nav-link text-muted"
                                target="_blank">درباره ما</a>
                        </li>
                        <li class="nav-item">
                            <a
                                href="https://github.com/amili-code/routerInterface"
                                class="nav-link text-muted"
                                target="_blank">درباره نرم افزار</a>
                        </li>
                        <li class="nav-item">
                            <a href="/toturial"
                                class="nav-link text-muted"
                                target="_blank">یادگیری</a>
                        </li>
                        <!-- <li class="nav-item">
                            <a href="https://amili-code.github.io"
                                class="nav-link pe-0 text-muted"
                                target="_blank">من</a>
                        </li> -->
                    </ul>
                </div>
            </div>
        </div>
    </footer>
</div>

<script>
    document.addEventListener("DOMContentLoaded", async function () {
        const input = document.getElementById("logUsername");
        const list = document.getElementById("starredUsersList");

        // واکشی کاربران ستاره‌دار
        async function fetchStarredUsers() {
            try {
                const clients = await apiRequest('/client');
                return clients.filter(client => client.star); // فقط کاربران ستاره‌دار
            } catch (error) {
                console.error("خطا در دریافت کاربران:", error);
                return [];
            }
        }

        // نمایش لیست کاربران ستاره‌دار
        async function showUserList() {
            const users = await fetchStarredUsers();
            if (users.length === 0) return;

            list.innerHTML = ""; // پاک کردن لیست قدیمی
            users.forEach(user => {
                const li = document.createElement("li");
                li.classList.add("dropdown-item");
                li.textContent = user.name || user.fullName; // اگر fullName وجود دارد، نمایش بدهد
                li.style.cursor = "pointer";
                li.addEventListener("click", () => {
                    input.value = user.name; // تنظیم مقدار اینپوت
                    list.style.display = "none"; // بستن لیست
                });
                list.appendChild(li);
            });

            list.style.display = "block"; // نمایش لیست
        }

        // بستن لیست هنگام کلیک بیرون
        document.addEventListener("click", (event) => {
            if (!input.contains(event.target) && !list.contains(event.target)) {
                list.style.display = "none";
            }
        });

        // نمایش لیست هنگام کلیک روی اینپوت
        input.addEventListener("focus", showUserList);
    });
</script>

<script>
        let chartInstance = null;
document.getElementById("logerForm").addEventListener("submit", async function(event) {
    event.preventDefault();
    const userName = document.getElementById("logUsername").value;
    const year = document.getElementById("logYear").value;
    const month = document.getElementById("logMonth").value;
    const day = document.getElementById("logDay").value;
    
    let apiUrl = `/loger/${userName}`;
    if (year) apiUrl += `/${year}`;
    if (month) apiUrl += `/${month}`;
    if (day) apiUrl += `/${day}`;
    
    const data = await apiRequest(apiUrl);
    renderChart(data, year, month, day);
});

function renderChart(data, year, month, day) {
    const ctx = document.getElementById("logChart").getContext("2d");
    if (chartInstance) {
        chartInstance.destroy();
    }

    let labels = [];
    let downloads = [];
    let uploads = [];
    let uptimes = [];
    let totalTransfers = [];
    let labelPrefix = year ? (month ? (day ? "ساعت " : "روز ") : "ماه ") : "سال ";

    console.log(data);
    
    data.forEach(entry => {
        let label = `${labelPrefix}${entry.year || entry.month || entry.day || entry.hour}`;
        labels.push(label);
        downloads.push(parseFloat(entry.download) || 0);
        uploads.push(parseFloat(entry.upload) || 0);
        uptimes.push(parseUptime(entry.uptime));
        totalTransfers.push((parseFloat(entry.download) || 0) + (parseFloat(entry.upload) || 0));
    });
    
    chartInstance = new Chart(ctx, {
        type: "line",
        data: {
            labels,
            datasets: [
                {
                    label: "دانلود (MB)",
                    borderColor: "blue",
                    backgroundColor: "rgba(0,0,255,0.1)",
                    data: downloads,
                    fill: true
                },
                {
                    label: "آپلود (MB)",
                    borderColor: "red",
                    backgroundColor: "rgba(255,0,0,0.1)",
                    data: uploads,
                    fill: true
                },
                {
                    label: "مجموع انتقال داده (MB)",
                    borderColor: "purple",
                    backgroundColor: "rgba(128,0,128,0.1)",
                    data: totalTransfers,
                    fill: true
                }
            ]
        },
        options: {
            responsive: true,
            scales: {
                y: {
                    beginAtZero: true
                }
            }
        }
    });
}

function parseUptime(uptime) {
    const match = uptime.match(/(\d+)m(\d+)s/);
    if (match) {
        return parseInt(match[1]) + parseInt(match[2]) / 60; // تبدیل به دقیقه
    }
    return 0;
}


</script>